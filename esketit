#include <iostream>
#include <armadillo>
#include "time.h"
using namespace std;
using namespace arma;


// oppgave 1b:
/*
int main()
{
    double time;
    clock_t start, finish;
    start = clock();

 //   for (int l=1;l<=10e5;l++){

        int n=1000000;
        double h=1./(n+1);
        vec a_array(n-1);
        vec b_array(n);
        vec c_array(n-1); //n-2 som siste indeks
        a_array.fill(-1);
        b_array.fill(2);
        c_array.fill(-1);

        vec y_new(n); //"new" er tilde
        vec x(n);

        for(int i=0; i<n; i++) {
            x(i) = (i+1)*h;
        }

        vec y_array(n);
        vec b_new(n);

        y_array  = h*h*100*exp(-10*(x));

        b_new[0] = b_array[0];
        y_new[0] = y_array[0];

        for (int i=1; i<n; i++) {
            b_new(i) = b_array(i) - (c_array(i-1)*a_array(i-1))/b_new(i-1);
            y_new(i) = y_array(i) - (y_new(i-1)*a_array(i-1))/b_new(i-1);
        }

        vec exact(n);
        exact = 1.0-(1.0-exp(-10.0))*(x) - exp(-10.0*(x));

        vec v(n);
        v(n-1) = y_new(n-1)/b_new(n-1);
        vec relError(n);


        for (int j=n-2;j>=0;j--){
            v(j) = (y_new(j)-c_array(j)*v(j+1))/b_new(j);
            relError = log10(abs((v(j)-exact(j))/exact(j)));
        }

        cout << "X value:\tNumerical:\t Exact:\t Relative Error:" << endl;
        for (int j=0;j<n;j++){
            cout <<x(j)<<"\t"<< v(j) <<"\t "<<exact(j)<< relError << endl;
        }
  //  }
    finish = clock();
    time = ((finish-start)/CLOCKS_PER_SEC);
    cout << "Time elapsed:"<< time << endl;

    return 0;
}
*/
// oppgave 1c:


int main()

{
    double time;
    clock_t start, finish;
    start = clock();
 //   for (int l=1;l<=10e5;l++){
        int n=10000000;
        double h=1./(n+1);

        vec y_new(n); //"new" er tilde
        vec x(n);

        for(int i=0; i<n; i++) {
            x(i) = (i+1)*h;
        }

        vec y_array(n);

        y_array  = h*h*100*exp(-10*(x));

        vec b_teller(n);
        vec b_nevner(n);
        vec b_new(n);
        y_new[0] = y_array[0];

        b_teller = regspace<vec>(2,n+1);
        b_nevner = regspace<vec>(1,n);
        b_new = b_teller/b_nevner;

        for (int i=1; i<n; i++) {
            y_new(i) = y_array(i) + (y_new(i-1)/b_new(i-1));
        }

        vec exact(n);
        exact = 1.0-(1.0-exp(-10.0))*(x) - exp(-10.0*(x));


        vec v(n);
        vec relError(n);

        v(n-1) = y_new(n-1)/b_new(n-1);

        for (int j=n-2;j>=0;j--){
            v(j) = (y_new(j)+v(j+1))/b_new(j);
            relError = log10(abs((v(j)-exact(j))/exact(j)));
        }
        cout << "X value:\tNumerical:\t Exact:\t Relative Error:" << endl;
        for (int j=0;j<n;j++){
            cout <<x(j)<<"\t"<< v(j) <<"\t "<<exact(j) <<"\t "<<relError<< endl;
        }
  //  }
    finish = clock();
    time = ((finish-start)/CLOCKS_PER_SEC);
    cout << "Time elapsed: "<< time << " seconds" << endl;

    return 0;
}



//oppgave 1d:

/*
int main()
{
    int n=10;
    double h;
    h=1./(n+1);
    mat A = zeros(n,n);
    A(n-1,n-1)=2; //for å kun bruke 1 forløkke
    for (int i=0;i<n-1;i++){
        A(i,i)=2;
        A(i,i+1)=-1;
        A(i+1,i)=-1;
    }

    vec b(n);
    vec x(n);
    for(int i=0; i<n; i++) {
        x(i) = (i+1)*h;
    }
    b=h*h*100*exp(-10*(x));
    vec sol = solve(A,b);
    A.print("A=");
    b.print("b=");
    sol.print("sol=");

    mat L,U,P;
    lu(L,U,P,A);
    (A*sol).print("A*x=");
    L.print("L=");
    U.print("U=");
    (A*P*L*U).print("test");
    return 0;

}

*/
